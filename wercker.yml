# This references an OpenJDK container from the
# Docker Hub https://hub.docker.com/_/openjdk/
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: openjdk:8-jdk

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html
build:
    # Steps make up the actions in your pipeline
    # Read more about steps on our dev center:
    # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # https://github.com/wercker/step-maven
    - java/maven:
      goals: install
      cache_repo: true
      version: 3.5.2

      # (4) create an name for that pipeline
      deploy:
        # (5) configure the container
        box:
          id: openjdk
          tag: 8-jre-alpine
          cmd: /bin/sh # see: http://devcenter.wercker.com/docs/faq/alpine-faq
        steps:
          # (6) moving our artifact to the final location
          - script:
            code: |
              mv $WERCKER_SOURCE_DIR/cloud-ci-vergleich.jar /cloud-ci-vergleich.jar
              touch /cloud-ci-vergleich.jar
          # (7) pushing the container to Docker Hub
          - internal/docker-push:
            # (8) that is defined in the wercker console as protected environment variables
            username: $DOCKER_USERNAME
            password: $DOCKER_PASSWORD
            tag: latest
            repository: $DOCKER_REPOSITORY
            # (9) configuration similar to dockerfile
            ports: "8080"
            volumes: "/tmp"
            entrypoint: java -Djava.security.egd=file:/dev/./urandom -jar /cloud-ci-vergleich.jar
          - script:
            code: |
              touch $WERCKER_OUTPUT_DIR/deploy-me
